pipeline {
    agent any
    
    environment {
        AWS_REGION = 'ap-south-2' 
    }
    
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/RushiVishwesh/task-devops.git'
            }
        }
        
        stage('Terraform Init & Apply') {
            steps {
                dir("task-devops") {
                    script {
                        sh 'terraform init'
                        sh 'terraform apply -auto-approve'
                    }
                }
            }
        }
        
        stage('Retrieve ECR URL') {
            steps {
                script {
                    def ecrUrl = sh(script: 'terraform output ecr_url', returnStdout: true).trim()
                    env.ECR_REPO_URL = ecrUrl
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    def dockerImage = docker.build("lambda-repository:${env.BUILD_NUMBER}")
                    dockerImage.push()
                }
            }
        }
        
        stage('Login to ECR') {
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${env.ECR_REPO_URL}"
                }
            }
        }
        
        stage('Push to ECR') {
            steps {
                script {
                    def dockerImage = docker.image("lambda-repository:${env.BUILD_NUMBER}")
                    dockerImage.tag("${env.ECR_REPO_URL}:latest")
                    dockerImage.push("${env.ECR_REPO_URL}:latest")
                }
            }
        }
    }
}
